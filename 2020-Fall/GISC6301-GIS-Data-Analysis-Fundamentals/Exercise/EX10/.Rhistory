n <- 50
pi <- 0.1
E <- pi * n
sdBinom <- sqrt(pi * (1 - pi) * n)
(skewBinom <- (1 - 2 * pi) / sdBinom)
n <- 50
pi <- 0.15
E <- pi * n
sdBinom <- sqrt(pi * (1 - pi) * n)
(skewBinom <- (1 - 2 * pi) / sdBinom)
n <- 50
pi <- 0.15
E <- pi * n
sdBinom <- sqrt(pi * (1 - pi) * n)
(skewBinom <- (1 - 2 * pi) / sdBinom)
hist(sdBinom)
n <- 50
pi <- 0.15
E <- pi * n
sdBinom <- sqrt(pi * (1 - pi) * n)
(skewBinom <- (1 - 2 * pi) / sdBinom)
plot(sdBinom)
source('G:/UTD_Classes/Teaching-Assistant/2019-Fall/GISC6301-GIS-Data-Analysis/Lectures/Chapter10/NormalityTests.R')
source('G:/UTD_Classes/Teaching-Assistant/2019-Fall/GISC6301-GIS-Data-Analysis/Lectures/Chapter10/NormalityTests.R')
source('G:/UTD_Classes/Teaching-Assistant/2019-Fall/GISC6301-GIS-Data-Analysis/Exercise/Lab10/BinomToNormal.R')
n <- 50
pi <- 0.15
E <- pi * n
sdBinom <- sqrt(pi * (1 - pi) * n)
(skewBinom <- (1 - 2 * pi) / sdBinom)
## Binomial probabities
binomDf <- data.frame(Count=0:n, prob=dbinom(0:n, size=n, prob=pi))
binomDf <- binomDf[binomDf$prob>0.0001, ] # drop counts with probs close to zero
## Plot binomial distribution with normal curve overlaid
plot(prob~Count, data=binomDf, type="h", lwd=4, ylab="Prob(Count)",
main=bquote("Binomial Distribtuion with"~~pi==.(pi)~~"and"~~n==.(n)))
lines(spline(binomDf$Count, dnorm(binomDf$Count,mean=E,sd=sdBinom)), col="red")
n <- 50
pi <- 0.15
E <- pi * n
sdBinom <- sqrt(pi * (1 - pi) * n)
(skewBinom <- (1 - 2 * pi) / sdBinom)
## Binomial probabities
binomDf <- data.frame(Count=0:n, prob=dbinom(0:n, size=n, prob=pi))
binomDf <- binomDf[binomDf$prob>0.0001, ] # drop counts with probs close to zero
## Plot binomial distribution with normal curve overlaid
plot(prob~Count, data=binomDf, type="h", lwd=4, ylab="Prob(Count)",
main=bquote("Binomial Distribtuion with"~~pi==.(pi)~~"and"~~n==.(n)))
lines(spline(binomDf$Count, dnorm(binomDf$Count,mean=E,sd=sdBinom)), col="red")
n <- 1000
pi <- 0.15
E <- pi * n
sdBinom <- sqrt(pi * (1 - pi) * n)
(skewBinom <- (1 - 2 * pi) / sdBinom)
## Binomial probabities
binomDf <- data.frame(Count=0:n, prob=dbinom(0:n, size=n, prob=pi))
binomDf <- binomDf[binomDf$prob>0.0001, ] # drop counts with probs close to zero
## Plot binomial distribution with normal curve overlaid
plot(prob~Count, data=binomDf, type="h", lwd=4, ylab="Prob(Count)",
main=bquote("Binomial Distribtuion with"~~pi==.(pi)~~"and"~~n==.(n)))
lines(spline(binomDf$Count, dnorm(binomDf$Count,mean=E,sd=sdBinom)), col="red")
( skewBinom <- (1-2*pi)/sdBinom )
