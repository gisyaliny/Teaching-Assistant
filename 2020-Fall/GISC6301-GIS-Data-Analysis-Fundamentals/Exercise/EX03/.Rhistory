library(RColorBrewer)
library(RColorBrewer)
display.brewer.all()
library(RColorBrewer)
display.brewer.all()
library(RColorBrewer)
display.brewer.all()
library(DallasTracts)
install.packages("DallasTracts")
library(TexMix)
library(rgdal)
#Get polygons of neighboring countries
neig.shp <- readOGR(dsn="./Italy",layer = "Neighbors", integer64 ="allow.loss")
#Get polygons of Italy provinces
Italy.shp <- readOGR(dsn="./Italy",layer = "Provinces", integer64 = "allow.loss")
Italy.bbox <- bbox(Italy.shp)
plot(neig.shp,axes = T,col=grey(0.9),border = "white", xlim=Italy.bbox[1,], ylim=Italy.bbox[2,])
mapColorQual(Italy.shp$REGION, Italy.shp,
map.title="Region Map of Italy",
legend.title = "Regions",add.to.map=T)
library(TexMix)
library(rgdal)
#Get polygons of neighboring countries
neig.shp <- readOGR(dsn="./Italy",layer = "Neighbors", integer64 ="allow.loss")
#Get polygons of Italy provinces
Italy.shp <- readOGR(dsn="./Italy",layer = "Provinces", integer64 = "allow.loss")
Italy.bbox <- bbox(Italy.shp)
plot(neig.shp,axes = T,col=grey(0.9),border = "white", xlim=Italy.bbox[1,], ylim=Italy.bbox[2,])
mapColorQual(as.factor(Italy.shp$REGION), Italy.shp,
map.title="Region Map of Italy",
legend.title = "Regions",add.to.map=T)
mapColorQual(as.factor(Italy.shp$REGION), Italy.shp,
map.title="Region Map of Italy",
legend.title = "Regions",add.to.map=T)
plot(neig.shp,axes = T,col=grey(0.9),border = "white", xlim=Italy.bbox[1,], ylim=Italy.bbox[2,])
mapColorQual(as.factor(Italy.shp$REGION), Italy.shp,
map.title="Region Map of Italy",
legend.title = "Regions",add.to.map=T)
plot(neig.shp,axes = T,col=grey(0.9),border = "white", xlim=Italy.bbox[1,], ylim=Italy.bbox[2,])
mapColorQual(as.factor(Italy.shp$REGION), Italy.shp,
map.title="Region Map of Italy",
legend.title = "Regions",add.to.map=T)
plot(neig.shp,axes=T,col=grey(0.9),border="white",
xlim=Italy.bbox[1,], ylim=Italy.bbox[2,])
# addToMap=T over-plots provinces over neighbors
mapColorRamp(Italy.shp$TOTFERTRAT,Italy.shp, breaks=7,
map.title="Italy Fertility Rate ",
legend.title="Fertility Rate",add.to.map=T,
legend.cex=0.7)
plot(neig.shp,axes=T,col=grey(0.9),border="white",
xlim=Italy.bbox[1,], ylim=Italy.bbox[2,])
# addToMap=T over-plots provinces over neighbors
mapColorRamp(Italy.shp$TOTFERTRAT,Italy.shp, breaks=7,
map.title="Italy Fertility Rate ",
legend.title="Fertility Rate",add.to.map=T,
legend.cex=0.7)
plot(neig.shp,axes=T,col=grey(0.9),border="white",
xlim=Italy.bbox[1,], ylim=Italy.bbox[2,])
# addToMap=T over-plots provinces over neighbors
mapColorRamp(Italy.shp$TOTFERTRAT,Italy.shp, breaks=7,
map.title="Italy Fertility Rate ",
legend.title="Fertility Rate",add.to.map=T,
legend.cex=0.7)
Italy.shp$logMigRatio <- log(Italy.shp$INFLOW/Italy.shp$OUTFLOW)
hist(Italy.shp$logMigRatio)
plot(neig.shp,axes=T,col=grey(0.9),border="white",
xlim=Italy.bbox[1,], ylim=Italy.bbox[2,])
sum(Italy.shp$logMigRatio <= 0)
sum(Italy.shp$logMigRatio >= 0)
mapBiPolar(Italy.shp$logMigRatio, Italy.shp,
neg.breaks=3, pos.breaks=5, break.value=0,
map.title="Italy Migration Ratio",
legend.title="Ratio",add.to.map=T,
legend.cex=0.7)
Italy.shp$logMigRatio <- log(Italy.shp$INFLOW/Italy.shp$OUTFLOW)
hist(Italy.shp$logMigRatio)
plot(neig.shp,axes=T,col=grey(0.9),border="white",
xlim=Italy.bbox[1,], ylim=Italy.bbox[2,])
sum(Italy.shp$logMigRatio <= 0)
sum(Italy.shp$logMigRatio >= 0)
mapBiPolar(Italy.shp$logMigRatio, Italy.shp,
neg.breaks=3, pos.breaks=5, break.value=0,
map.title="Italy Migration Ratio",
legend.title="Ratio",add.to.map=T,
legend.cex=0.7)
plot(neig.shp,axes=T,col=grey(0.9),border="white",
xlim=Italy.bbox[1,], ylim=Italy.bbox[2,])
mapBiPolar(Italy.shp$logMigRatio, Italy.shp,
neg.breaks=3, pos.breaks=5, break.value=0,
map.title="Italy Migration Ratio",
legend.title="Ratio",add.to.map=T,
legend.cex=0.7)
climate_sub <- climate %>% filter(Source == "Berkeley" & Year >= 1900) %>%
mutate(pos=Anomaly10y >= 0)
library("gcookbook")
climate_sub <- climate %>% filter(Source == "Berkeley" & Year >= 1900) %>%
mutate(pos=Anomaly10y >= 0)
library("gcookbook")
library(dbplyr)
climate_sub <- climate %>% filter(Source == "Berkeley" & Year >= 1900) %>%
mutate(pos=Anomaly10y >= 0)
library(gcookbook) # Load gcookbook for the climate data set
library(dplyr)
climate_sub <- climate %>%
filter(Source == "Berkeley" & Year >= 1900) %>%
mutate(pos = Anomaly10y >= 0)
ggplot(climate_sub, aes(x=Year, y=Anomaly10y, fill=pos)) +
geom_col(position="identity", colour="black", size=0.25) +
scale_fill_manual(values = c("#CCEEFF","#FFDDDD"), guide=FALSE)
library(gcookbook) # Load gcookbook for the climate data set
library(dplyr)
climate_sub <- climate %>%
filter(Source == "Berkeley" & Year >= 1900) %>%
mutate(pos = Anomaly10y >= 0)
ggplot(climate_sub, aes(x=Year, y=Anomaly10y, fill=pos)) +
geom_col(position="identity", colour="black", size=0.25) +
scale_fill_manual(values = c("#CCEEFF","#FFDDDD"), guide=FALSE)
library(gcookbook) # Load gcookbook for the climate data set
library(dplyr)
climate_sub <- climate %>%
filter(Source == "Berkeley" & Year >= 1900) %>%
mutate(pos = Anomaly10y >= 0)
ggplot(climate_sub, aes(x = Year, y = Anomaly10y, fill = pos)) +
geom_col(position = "identity", colour = "black", size = 0.25) +
scale_fill_manual(values = c("#CCEEFF", "#FFDDDD"), guide = FALSE)
library(gcookbook) # Load gcookbook for the climate data set
library(dplyr)
library(ggplot)
library(gcookbook) # Load gcookbook for the climate data set
library(dplyr)
library(ggplot2)
climate_sub <- climate %>%
filter(Source == "Berkeley" & Year >= 1900) %>%
mutate(pos = Anomaly10y >= 0)
ggplot(climate_sub, aes(x = Year, y = Anomaly10y, fill = pos)) +
geom_col(position = "identity", colour = "black", size = 0.25) +
scale_fill_manual(values = c("#CCEEFF", "#FFDDDD"), guide = FALSE)
library(MASS)
biopsy_mod <- biopsy %>% mutate(classn = recode(class, benign=0, malignant=1))
ggplot(biopsy_mod, aes(x=V1, y=classn))+
geom_point(position=position_jitter(width=0.3, height=0.06), alpha=0.4, shape=21, size=1.5)+
stat_smooth(method=glm, method.args=list(family=binomial))
ggplot(heightweight, aes(x=sex, y=heightIn)) +
geom_boxplot(outlier.colour = NA, width= 0.4)+
geom_dotplot(binaxis = "y", binwidth = 0.5, stackdir = "center", fill=NA)
ggplot(heightweight, aes(x=sex, y=heightIn)) +
geom_boxplot(outlier.colour = NA, width= 0.4)+
geom_dotplot(binaxis = "y", binwidth = 0.5, stackdir = "center", fill=NA)
ggplot(faithful, aes(x=eruptions, y=waiting))+
geom_point()+
stat_density2d(aes(alpha=..density..), geom="tile", contour = FALSE)
ggplot(faithful, aes(x=eruptions, y=waiting))+
geom_point()+
stat_density2d(aes(alpha=..density..), geom="tile", contour = FALSE)
concord <- foreign::read.spss('Concord1.sav')
# par(mfrow(1,2))
hist(concord$income, breaks=seq(0,100,by=2.5), freq=FALSE,
ylim=c(0,0.05), xlab="Income in $1000",
main="Income Distribution in the City of Concord")
rug(jitter(concord$income, factor=1), side=1)
lines(density(concord$income, bw=1), lwd=2)
concord <- foreign::read.spss('Concord1.sav')
# par(mfrow(1,2))
hist(concord$income, breaks=seq(0,100,by=2.5), freq=FALSE,
ylim=c(0,0.05), xlab="Income in $1000",
main="Income Distribution in the City of Concord")
rug(jitter(concord$income, factor=1), side=1)
lines(density(concord$income, bw=1), lwd=2)
hist(concord$income, breaks=seq(0,100,by=2.5), freq=FALSE,
ylim=c(0,0.05), xlab="Income in $1000",
main="Income Distribution in the City of Concord")
rug(jitter(concord$income, factor=1), side=1)
lines(density(concord$income, bw=1), lwd=2)
hist(concord$income, breaks=seq(0,100,by=5), freq=FALSE,
ylim=c(0,0.05), xlab="Income in $1000",
main="Income Distribution in the City of Concord")
rug(jitter(concord$income, factor=1), side=1)
lines(density(concord$income, bw=2.5), lwd=2)
hist(concord$income, breaks=seq(0,100,by=5), freq=FALSE,
ylim=c(0,0.05), xlab="Income in $1000",
main="Income Distribution in the City of Concord")
rug(jitter(concord$income, factor=1), side=1)
lines(density(concord$income, bw=2.5), lwd=2)
hist(concord$income, breaks=seq(0,100,by=20), freq=FALSE,
ylim=c(0,0.05), xlab="Income in $1000",
main="Income Distribution in the City of Concord")
rug(jitter(concord$income, factor=1), side=1)
lines(density(concord$income, bw=10), lwd=2)
stem(concord$income)
?stem
stem(concord$income)
?stem
table(concord$income)
summary(concord$income)
concord <- foreign::read.spss('Concord1.sav',to.data.frame = TRUE)
# par(mfrow(1,2))
hist(concord$income, breaks=seq(0,100,by=2.5), freq=FALSE,
ylim=c(0,0.05), xlab="Income in $1000",
main="Income Distribution in the City of Concord")
rug(jitter(concord$income, factor=1), side=1)
lines(density(concord$income, bw=1), lwd=2)
Italy.shp$logMigRatio <- log(Italy.shp$INFLOW/Italy.shp$OUTFLOW)
hist(Italy.shp$logMigRatio)
plot(neig.shp,axes=T,col=grey(0.9),border="white",
xlim=Italy.bbox[1,], ylim=Italy.bbox[2,])
sum(Italy.shp$logMigRatio <= 0)
sum(Italy.shp$logMigRatio >= 0)
mapBiPolar(Italy.shp$logMigRatio, Italy.shp,
neg.breaks=3, pos.breaks=5, break.value=0,
map.title="Italy Migration Ratio",
legend.title="Ratio",add.to.map=T,
legend.cex=0.7)
library(RColorBrewer)
display.brewer.all()
library(TexMix)
library(rgdal)
#Get polygons of neighboring countries
neig.shp <- readOGR(dsn="./Italy",layer = "Neighbors", integer64 ="allow.loss")
#Get polygons of Italy provinces
Italy.shp <- readOGR(dsn="./Italy",layer = "Provinces", integer64 = "allow.loss")
Italy.bbox <- bbox(Italy.shp)
plot(neig.shp,axes = T,col=grey(0.9),border = "white", xlim=Italy.bbox[1,], ylim=Italy.bbox[2,])
mapColorQual(as.factor(Italy.shp$REGION), Italy.shp,
map.title="Region Map of Italy",
legend.title = "Regions",add.to.map=T)
plot(neig.shp,axes=T,col=grey(0.9),border="white",
xlim=Italy.bbox[1,], ylim=Italy.bbox[2,])
# addToMap=T over-plots provinces over neighbors
mapColorRamp(Italy.shp$TOTFERTRAT,Italy.shp, breaks=7,
map.title="Italy Fertility Rate ",
legend.title="Fertility Rate",add.to.map=T,
legend.cex=0.7)
Italy.shp$logMigRatio <- log(Italy.shp$INFLOW/Italy.shp$OUTFLOW)
hist(Italy.shp$logMigRatio)
plot(neig.shp,axes=T,col=grey(0.9),border="white",
xlim=Italy.bbox[1,], ylim=Italy.bbox[2,])
sum(Italy.shp$logMigRatio <= 0)
sum(Italy.shp$logMigRatio >= 0)
mapBiPolar(Italy.shp$logMigRatio, Italy.shp,
neg.breaks=3, pos.breaks=5, break.value=0,
map.title="Italy Migration Ratio",
legend.title="Ratio",add.to.map=T,
legend.cex=0.7)
library(gcookbook) # Load gcookbook for the climate data set
library(dplyr)
library(ggplot2)
climate_sub <- climate %>%
filter(Source == "Berkeley" & Year >= 1900) %>%
mutate(pos = Anomaly10y >= 0)
ggplot(climate_sub, aes(x = Year, y = Anomaly10y, fill = pos)) +
geom_col(position = "identity", colour = "black", size = 0.25) +
scale_fill_manual(values = c("#CCEEFF", "#FFDDDD"), guide = FALSE)
library(MASS)
biopsy_mod <- biopsy %>% mutate(classn = recode(class, benign=0, malignant=1))
ggplot(biopsy_mod, aes(x=V1, y=classn))+
geom_point(position=position_jitter(width=0.3, height=0.06), alpha=0.4, shape=21, size=1.5)+
stat_smooth(method=glm, method.args=list(family=binomial))
ggplot(heightweight, aes(x=sex, y=heightIn)) +
geom_boxplot(outlier.colour = NA, width= 0.4)+
geom_dotplot(binaxis = "y", binwidth = 0.5, stackdir = "center", fill=NA)
ggplot(faithful, aes(x=eruptions, y=waiting))+
geom_point()+
stat_density2d(aes(alpha=..density..), geom="tile", contour = FALSE)
concord <- foreign::read.spss('Concord1.sav',to.data.frame = TRUE)
# par(mfrow(1,2))
hist(concord$income, breaks=seq(0,100,by=2.5), freq=FALSE,
ylim=c(0,0.05), xlab="Income in $1000",
main="Income Distribution in the City of Concord")
rug(jitter(concord$income, factor=1), side=1)
lines(density(concord$income, bw=1), lwd=2)
hist(concord$income, breaks=seq(0,100,by=20), freq=FALSE,
ylim=c(0,0.05), xlab="Income in $1000",
main="Income Distribution in the City of Concord")
rug(jitter(concord$income, factor=1), side=1)
lines(density(concord$income, bw=10), lwd=2)
stem(concord$income)
?stem
table(concord$income)
summary(concord$income)
mapBiPolar(provinces.shp$logMigRatio, provinces.shp, neg.breaks=4, pos.breaks=4,  break.value=median(provinces.shp$logMigRatio),map.title="Below and Above Median Population Change",legend.title="Migration\nChange",legend.cex=0.8, add.to.map=T)
plot(neig.shp, axes=T, col=grey(0.9), border="white",xlim=Italy.bbox[1,], ylim=Italy.bbox[2,])
mapBiPolar(Italy.shp$logMigRatio, Italy.shp, neg.breaks=4, pos.breaks=4,  break.value=median(Italy.shp$logMigRatio),map.title="Below and Above Median Population Change",legend.title="Migration\nChange",legend.cex=0.8, add.to.map=T)
