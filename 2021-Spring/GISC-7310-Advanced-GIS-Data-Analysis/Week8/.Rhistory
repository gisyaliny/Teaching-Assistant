??bcpower
A <- matrix(c(2,7,3,5,3,2),nrow = 3)
A
A <- matrix(c(2,3,3,7,5,2),nrow = 3)
A
B <- matrix(c(-1,4,3,2,8,9),nrow = 3)
A %*% inv(B)
B^-1
qr.solve(B) %*% B
t(B)
A %*% t(B)
A %*% t(A) + B %*% t(B)
diag(A %*% t(A) + B %*% t(B))
(A %*% t(A) + B %*% t(B))
diag(diag(A %*% t(A) + B %*% t(B)))
inverse.gaussian(A %*% t(A) + B %*% t(B))
(A %*% t(A) + B %*% t(B))^-1
crossprod(A)
crossprod(A) + crossprod(A,B)
solve(A %*% t(A) + B %*% t(B))
35 *11  / 265
solve(matrix(c(265/11,0,0,0,11,0,0,0,2764/53),nrow = 3))
det(solve(matrix(c(265/11,0,0,0,11,0,0,0,2764/53),nrow = 3)))
det(solve(A %*% t(A) + B %*% t(B)))
det(solve(matrix(c(314/11,0,0,0,11,0,0,0,18867/314),nrow = 3)))
det(matrix(c(11/314,0,0,0,1/11,0,0,0,314/18867),nrow = 3))
C <- matrix(c0,1,1,1,0,1,2,2,0),nrow = 3)
C <- matrix(c0,1,1,1,0,1,2,2,0),nrow = 3)
C <- matrix(c(0,1,1,1,0,1,2,2,0),nrow = 3)
C
t
t(A) %*% C %*% B
det(t(A) %*% C %*% B)
solve(t(A) %*% C %*% B)
det(solve(t(A) %*% C %*% B))
det(matrix)
-1/1054 * det(matrix(c(302,-142,-101,44),nrow = 2))
det(matrix(c(302,-142,-101,44),nrow = 2))
D <- matrix(c(12,8,2,65,52,29,71,56,27),nrow = 3)
D
solve(D)
det(solve(D))
det(diag(18,26/3,-2))
det(diag(c(18,26/3,-2),ncol = 3))
det(diag(c(18,26/3,-2),ncol = 3))
1/-312
library(tidyverse)
library(nycflights13)
sqrt(2) ^ 2 == 2
near(sqrt(2) ^ 2, 2)
.Machine$double.eps^0.5
data("flights")
flights %>% filter(arr_delay>=3*60)
flights %>% filter(dest %in% c('DFW','DAL'))
flights %>% filter(carrier %in% c('WN','AA'))
flights %>% filter(arr_delay > 2 * 60,(sched_arr_time - sched_dep_time) - air_time  > 30)
flights %>% filter(dep_delay > 1 * 60,arr_delay > 60 ,(sched_arr_time - sched_dep_time) - air_time  > 30)
flights %>% arrange(!is.na(flights))
?select
# everything() selects all variable. It is also useful in combination with other tidyselect operators.
flights %>% select(sched_arr_time,sched_dep_time,sched_dep_time)
??mutate
flights %>% filter(!is.na(arr_delay)) %>%
mutate(ranking = rank(arr_delay, ties.method = "min")) %>%
top_n(10)
flights %>% filter(!is.na(arr_delay)) %>%
mutate(ranking = min_rank(arr_delay)) %>%
top_n(10)
flights %>% group_by(carrier) %>%
summarise(avg_dep_delay = mean(dep_delay[!is.na(dep_delay)]),
avg_arr_delay = mean(arr_delay[!is.na(arr_delay)]))
flights %>% filter(dep_delay > 0) %>%
group_by(hour) %>%
summarise(avg_delay = mean(dep_delay),happend_times =n())
w %>% x %>% y %>% z
library(TexMix)
data("tractShp")
tractDf <- as.data.frame(tractShp)
sapply(tractDf,is.factor)
summary(tractDf)
library(ggplot2)
library(reshape2)
tractDf %>% is.na() %>%
melt() %>%
ggplot(aes(x = Var2,y = Var1,fill=value)) +
geom_raster() +
coord_flip()+
scale_y_continuous(NULL, expand = c(0,0)) +
scale_fill_grey(name = '',labels = c("Present",'Missing'))+
xlab('Observation') +
theme(axis.text.y = element_text(size = 4))
library(ggplot2)
library(reshape2)
tractDf %>% is.na() %>%
melt() %>%
ggplot(aes(x = Var2,y = Var1,fill=value)) +
geom_raster() +
coord_flip()+
scale_y_continuous(NULL, expand = c(0,0)) +
scale_fill_grey(name = '',labels = c("Present",'Missing'))+
xlab('Observation') +
theme(axis.text.y = element_text(size = 4))
tractDf %>% is.na() %>%
melt() %>%
ggplot(aes(x = Var2,y = Var1,fill=value)) +
geom_raster() +
coord_flip()+
scale_y_continuous(NULL, expand = c(0,0)) +
scale_fill_grey(name = '',labels = c("Present",'Missing'))+
xlab('Observation') +
theme(axis.text.y = element_text(size = 4))
library(ggplot2)
library(reshape2)
tractDf %>% is.na() %>%
melt() %>%
ggplot(aes(x = Var1,y = Var2,fill=value)) +
geom_raster() +
coord_flip()+
scale_y_continuous(NULL, expand = c(0,0)) +
scale_fill_grey(name = '',labels = c("Present",'Missing'))+
xlab('Observation') +
theme(axis.text.y = element_text(size = 4))
tractDf %>% is.na() %>%
melt()
library(ggplot2)
library(reshape2)
tractDf %>% is.na() %>%
melt() %>%
ggplot(aes(x = Var2,y = Var1,fill=value)) +
geom_raster() +
coord_flip()+
scale_y_continuous(NULL, expand = c(0,0)) +
scale_fill_grey(name = '',labels = c("Present",'Missing'))+
xlab('Observation') +
theme(axis.text.y = element_text(size = 4))
tractDf %>% is.na() %>%
melt() %>%
ggplot(aes(x = Var2,y = Var1,fill=value)) +
geom_raster() +
coord_flip()+
scale_y_continuous(NULL, expand = c(0,0)) +
scale_fill_grey(name = '',labels = c("Present",'Missing'))+
xlab('Observation') +
theme(axis.text.y = element_text(size = 4))
tractDf %>% is.na() %>%
llapply(sum)
tractDf %>% is.na() %>%
lapply(sum)
tractDf %>% is.na() %>%
apply(2,sum)
tractDf %>% is.na() %>%
apply(1,sum)
tractDf %>% is.na() %>%
apply(1,sum) %>%
table()
tractDf %>% is.na() %>%
melt() %>%
ggplot(aes(x = Var2,y = Var1,fill=value)) +
geom_raster() +
coord_flip()+
scale_y_continuous(NULL, expand = c(0,0)) +
scale_fill_grey(name = '',labels = c("Present",'Missing'))+
xlab('Observation') +
theme(axis.text.y = element_text(size = 4))
tractDf %>%
step_center(all_numeric())%>%
step_scale(all_numeric())
tractDf %>%
step_center(all_numeric())%>%
step_scale(all_numeric())
library(recipes)
tractDf %>%
step_center(all_numeric())%>%
step_scale(all_numeric())
library(recipes)
tractDf %>%
step_center(all_numeric(),-all_outcomes()) %>%
step_scale(all_numeric(),-all_outcomes())
?step_center
View(tractDf)
?tractDf
??tractDf
library(recipes)
rec <- recipe(PCTB2010 ~ .,data = tractDf)
rec %>%
step_center(all_numeric(),-all_outcomes()) %>%
step_scale(all_numeric(),-all_outcomes())
library(recipes)
rec <- recipe(PCTB2010 ~ .,data = tractDf)
rec %>%
step_center(all_numeric()) %>%
step_scale(all_numeric())
x <- function(w){w <- w+w}
x(5)
x <- function(w){return(w+w)}
x(5)
y <- x
car<- data("cars")
attach(cars)
attach(car)
car<- data("cars")
attach(car)
force(cars)
attach(cars)
View(cars)
summary(mod1 <- lm(speed~dist))
summary(mod1 <- lm(speed/4~dist/4))
summary(mod1 <- lm((speed/4) ~(dist/4)))
speed1 <- speed/ 4
dist1 <- dist /4
summary(mod1 <- lm(speed1 ~dist1))
data("cars")
attach(cars)
summary(mod1 <- lm(speed~dist))
speed1 <- speed/ 4
dist1 <- dist /4
summary(mod2 <- lm(speed1 ~dist1))
data(cars)
attach(cars)
mod1 <- lm(dist~speed)
summary(mod1)
speed1 <- c(speed,mean(speed))
dist1 <- c(dist,mean(dist))
mod2 <- lm(dist1~speed1)
summary(mod2)
summary(mod1)
dist1 <- c(dist,mean(dist)-1)
mod2 <- lm(dist1~speed1)
summary(mod2)
summary(mod1)
# 2a
speed1 <- c(speed,mean(speed))
dist1 <- c(dist,mean(dist)-10)
mod2 <- lm(dist1~speed1)
summary(mod2)
speed1 <- c(speed,mean(speed))
dist1 <- c(dist,mean(dist)-20)
mod3 <- lm(dist1~speed1)
summary(mod3)
summary(mod1)
summary(mod3)
speed1 <- c(speed,mean(speed))
dist1 <- c(dist,mean(dist)+20)
mod4 <- lm(dist1~speed1)
summary(mod4)
summary(mod1)
# 2a
speed1 <- c(speed,mean(speed))
dist1 <- c(dist,mean(dist))
# 2a
speed1 <- c(speed,max(speed))
# 2a
predict(mod1)
speed1 <- c(speed,max(speed))
dist1 <- c(dist,max(predict(mod1)))
mod2 <- lm(dist1~speed1)
summary(mod2)
# 2a
summary(mod1)
speed1 <- c(speed,mean(speed))
dist1 <- c(dist,max(predict(mod1)) + 30)
mod3 <- lm(dist1~speed1)
summary(mod3)
# 2b
summary(mod1)
y1 <- rnorm(100,mean=0, sd = 1)
y2 <- rnorm(50,mean=200, sd = 2)
x <- c(rep(0,100),rep(1,50))
y <- c(y1,y2)
mod1 <- lm(y~x)
summary(mod1)
mod1$coefficients
mod1$effects
mod1$model
mod1$assign
summary(mod1)
(150*(149**2) / 5000) * (200)
var(x)
5000 / (150 * 149)
(150*(149**2) / 5000) * (200)
200 * 5000 / 150 ** 2
149 ** 2 / 5000
149 ** 2 / 5000 * 200
mean(x*y)
50*200 / 150
library(car)
data(Mroz)
attach(Mroz)
work <- lm(lfp~k5+k618+age+wc+hc+lwg+inc, data=Mroz)
lfp
## linear form in x
b0 <- 1   # Play with different parameters to see their effects on the Probs
b1 <- -1
## linear form in x
b0 <- 1   # Play with different parameters to see their effects on the Probs
b1 <- -1
x <- seq((-6-b0)/b1,(6-b0)/b1,length.out=200)  # Adjusted scale to b0 and b1
#x <- seq((-40-b0),(40-b0),length.out=200)  # Adjusted scale to b0 and b1
L <- b0+b1*x
## Different forms for p and (1-p)
## Probs of first category
p1 <- 1/(1+exp(-L))
p2 <- exp(L)/(1+exp(L))
## Probs of second category
np1 <- 1/(1+exp(L))
np2 <- exp(-L)/(1+exp(-L))
## Logistic curve turning point
medX <- -b0/b1
## Plot for different functional forms
layout(matrix(1:2,nrow=1,ncol=2))
## Prob(Success)
plot(x,p1,ylab="1/(1+exp(-L))",ylim=c(0,1),type="l", lwd=2, col="red",main="Pr(X < x)")
abline(h=c(0,0.5,1),lty=2); abline(v=medX,lty=5)
## Prob(Failure)
plot(x,np1,ylab="1/(1+exp(L))",ylim=c(0,1),type="l", lwd=2,col="blue", main="1 - Pr(X < x)")
abline(h=c(0,0.5,1),lty=2); abline(v=medX,lty=5)
layout(matrix(1,nrow=1,ncol=1))
## Check equality of logit against L
all.equal(L,log(p1/np1))
rm(list=ls())
library(car)
CloseVote <- foreign::read.spss("SchoolClosing.sav",to.data.frame=TRUE)
## Evaluate which variables are factors
sapply(CloseVote,is.factor)
setwd("~/")
rm(list=ls())
library(car)
CloseVote <- foreign::read.spss("SchoolClosing.sav",to.data.frame=TRUE)
## Evaluate which variables are factors
sapply(CloseVote,is.factor)
getwd()
setwd("~/")
setwd("G:/UTD_Classes/Teaching-Assistant/2021-Spring/GISC-7310-Advanced-GIS-Data-Analysis/Week8")
CloseVote <- foreign::read.spss("SchoolClosing.sav",to.data.frame=TRUE)
## Evaluate which variables are factors
sapply(CloseVote,is.factor)
##
## Just intercept an intercept model
##
GLM.00 <- glm(close ~ 1, family=binomial(logit), trace=TRUE, data=CloseVote)
summary(GLM.00)
cat("Deviance: ", logLik(GLM.00)*-2)
1/(1+exp(-(coef(GLM.00)[1])))            # predicted prob in favor of closing 1/(1+exp(-b_0))
mean(unclass(CloseVote$close)-1)         # same as average zeros and ones
##
## Bi-variate model "lived" and intercept
##
GLM.01 <- glm(close ~ lived, family=binomial(logit), trace=TRUE, data=CloseVote)
summary(GLM.01)
cat("Deviance: ", -2*logLik(GLM.01))
## Likelihood Ratio Test the "hard" way
( LR <- -2*(logLik(GLM.00)-logLik(GLM.01)) )
( pchisq(LR[1], df=1, lower.tail=F) )
## Likelihood Ratio Test the "easy" way
anova(GLM.00,GLM.01,test="LRT")
##
## Alternative: The probit model
##
GLM.probit <- glm(close ~ lived, family=binomial(link=probit), trace=TRUE, data=CloseVote)
summary(GLM.probit)
logLik(GLM.probit)
summary(GLM.probit)
logLik(GLM.probit)
## Likelihood Ratio Test the "easy" way
anova(GLM.00,GLM.01,test="LRT")
##
## Exploratory plots: barwidth _proportional_ to the NumOfObs in interval
##
plot(close~lived, data=CloseVote)
plot(close~educ, data=CloseVote)
plot(close~contam, data=CloseVote)
plot(close~hsc, data=CloseVote)
plot(close~female, data=CloseVote)
plot(close~nodad, data=CloseVote)
GLM.02 <- glm(close ~ lived + educ + contam + hsc + nodad + female + kids ,
family=binomial(logit), trace=TRUE, data=CloseVote)
summary(GLM.02, correlation=F)
summary(GLM.02)
vif(GLM.02)
logLik(GLM.02)
confint(GLM.02, level=0.95, type="Wald")
GLM.03 <- glm(close ~ lived + educ + contam + hsc + nodad ,
family=binomial(logit), data=CloseVote,
control=list(epsilon=1e-15,maxit=50, trace=TRUE))
summary(GLM.03, correlation=TRUE)
summary(GLM.03)
vif(GLM.03)
logLik(GLM.03)
## Likelihood Ratio Test
( LR <- -2*(logLik(GLM.03)-logLik(GLM.02)) )
( pchisq(LR[1], df=2, lower.tail=F) )
anova(GLM.03,GLM.02,test="LRT")
# load helper package
library(car)
data(Mroz)
attach(Mroz)
GLM.01 <- glm(lfp ~ k5 + k618 + age + wc + hc + lwg + inc, family=binomial(logit), trace=TRUE, data=Mroz)
summary(GLM.01)  #slope is for logit, not for probability
