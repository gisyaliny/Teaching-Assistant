??melt
## Data manipulation and visualization
library(dplyr); library(ggplot2)
## Data sets
library(AmesHousing)
data("attrition", package = "modeldata")       # Job attrition data
## Modeling process packages
library(rsample)   # for resampling procedures
library(caret)     # for resampling and model training
library(h2o)       # for resampling and model training
# h2o set-up
h2o.no_progress()  # turn off h2o progress bars
h2o.init()         # launch h2o
## Setup data. No ordinal factors
ames <- AmesHousing::make_ames()  # Ames housing data
ames.h2o <- as.h2o(ames)          # convert to h2o data set
h2o.init()
rm(list=ls())
# Helper packages
library(dplyr)
library(ggplot2)
library(visdat)
# Feature engineering packages
library(caret)
library(recipes)
library(AmesHousing); library(rsample)
data("ames_raw")
ames <- make_ames()
# Stratified Random Sampling
amesSplit <- initial_split(ames, breaks=8, prop=0.7, strata="Sale_Price")
amesTrain <- training(amesSplit)
amesTest <- testing(amesSplit)
hist(ames$Sale_Price)
hist(amesTrain$Sale_Price)
hist(ames$Sale_Price)
hist(amesTrain$Sale_Price)
transformed_response <- log(ames_raw$SalePrice)
par(mfrow = c(1,2))
hist(summary(lm(SalePrice~`Year Built`,data = ames_raw))$residuals,breaks = 50,main = "Non-log transformed model residuals",xlab = 'Value')
hist(summary(lm(transformed_response~ames_raw$`Year Built`))$residuals,breaks = 50,main = "log transformed model residuals",xlab = 'Value')
transformed_response <- log(ames_raw$SalePrice)
par(mfrow = c(1,2))
hist(summary(lm(SalePrice~`Year Built`,data = ames_raw))$residuals,breaks = 50,main = "Non-log transformed model residuals",xlab = 'Value')
hist(summary(lm(transformed_response~ames_raw$`Year Built`))$residuals,breaks = 50,main = "log transformed model residuals",xlab = 'Value')
transformed_response <- log(ames_raw$SalePrice)
par(mfrow = c(1,2))
hist(summary(lm(SalePrice~`Year Built`,data = ames_raw))$residuals,breaks = 50,main = "Non-log transformed model residuals",xlab = 'Value')
hist(summary(lm(transformed_response~ames_raw$`Year Built`))$residuals,breaks = 50,main = "log transformed model residuals",xlab = 'Value')
??malt()
??malt
??malt()
??melt
step_bagimpute
?nearZeroVar
unique(amesTrain$Street))
unique(amesTrain$Street)
length(unique(amesTrain$Street))/nrow(amesTrain) * 100
?YeoJohnson
??step_YeoJohnson
recipe(Sale_Price~., data = amesTrain) %>%
step_YeoJohnson(all_numeric())   ## Using YeoJohnson(power) transformation
ames_recipe %>%
step_center(all_numeric(),-all_outcomes()) %>%
step_scale(all_numeric(),-all_outcomes())
recipe(Sale_Price~., data = amesTrain) %>%
step_YeoJohnson(all_numeric())   ## Using YeoJohnson(power) transformation
ames_recipe %>%
step_center(all_numeric(),-all_outcomes()) %>%
step_scale(all_numeric(),-all_outcomes())
## Set a recipe for other variables using log transformation
ames_recipe <- recipe(Sale_Price~.,data = amesTrain) %>%
step_log(all_outcomes())
ames_recipe
## Set a recipe for other variables using log transformation
ames_recipe <- recipe(Sale_Price~.,data = amesTrain) %>%
step_log(all_outcomes())
ames_recipe
## Set a recipe for other variables using log transformation
ames_recipe <- recipe(Sale_Price~.,data = amesTrain) %>%
step_log(all_outcomes())
ames_recipe
ames_recipe %>%
step_center(all_numeric(),-all_outcomes()) %>%
step_scale(all_numeric(),-all_outcomes())
lumping <- recipe(Sale_Price~., data = amesTrain) %>%
step_other(Neighborhood,threshold = 0.01,other = "others") %>%
step_other(Screen_Porch,threshold = 0.1,other = ">0")
## Apply this recipe(blue print)
apply_2_training <- prep(lumping,training = amesTrain) %>%
bake(amesTrain)
count(apply_2_training,Neighborhood) %>% arrange(n) %>% head()
count(apply_2_training,Screen_Porch) %>% arrange(n)
recipe(Sale_Price~., data = amesTrain) %>%
step_dummy(all_nominal(),one_hot = T)
count(amesTrain,MS_SubClass) %>% arrange(n) %>% head()
recipe(Sale_Price~., data = amesTrain) %>%
step_integer(MS_SubClass) %>%
prep(amesTrain) %>%
bake(amesTrain) %>%
count(MS_SubClass)
rm(list=ls())
# Helper packages
library(dplyr)
